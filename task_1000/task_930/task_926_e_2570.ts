/**
Вам дают два 2D целочисленных массива Nums1 и Nums2. Nums1 [i] = [IDI, Vali] указывает, что число с ID IDI имеет значение, равное VALI. Nums2 [i] = [IDI, Vali] указывает, что число с ID IDI имеет значение, равное VALI. Каждый массив содержит уникальные идентификаторы и сортируется в порядке возрастания по ID. Объедините два массива в один массив, который отсортируется в порядке возрастания с помощью ID, уважая следующие условия: Только идентификаторы, которые появляются по крайней мере в одном из двух массивов, должны быть включены в результирующий массив. Каждый идентификатор должен быть включен только один раз, и его значение должно быть суммой значений этого идентификатора в двух массивах. Если идентификатор не существует в одном из двух массивов, предположим, что его значение в этом массиве составляет 0. Вернуть полученный массив. Возвращенный массив должен быть отсортирован в порядке возрастания по Id.
 */

function mergeArrays(nums1: number[][], nums2: number[][]): number[][] {
    let i = 0;
    let j = 0;
    const result: number[][] = [];

    while (i < nums1.length && j < nums2.length) {
        const id1 = nums1[i][0];
        const id2 = nums2[j][0];

        if (id1 === id2) {
            result.push([id1, nums1[i][1] + nums2[j][1]]);
            i++;
            j++;
        } else if (id1 < id2) {
            result.push([id1, nums1[i][1]]);
            i++;
        } else {
            result.push([id2, nums2[j][1]]);
            j++;
        }
    }

    while (i < nums1.length) {
        result.push(nums1[i]);
        i++;
    }

    while (j < nums2.length) {
        result.push(nums2[j]);
        j++;
    }

    return result;
}

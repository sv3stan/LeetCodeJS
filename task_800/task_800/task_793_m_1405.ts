/**
Строка s называется счастливой, если она удовлетворяет следующим условиям:
s содержит только буквы «a», «b» и «c».
s не содержит в качестве подстроки «aaa», «bbb» или «ccc».
s содержит не более одного вхождения буквы «а».
s содержит не более b вхождений буквы «b».
s содержит не более c вхождений буквы «c».
Учитывая три целых числа a, b и c, верните максимально длинную счастливую строку. Если существует несколько самых длинных счастливых строк, верните любую из них. Если такой строки нет, верните пустую строку «».
Подстрока — это непрерывная последовательность символов внутри строки.
 */

let a = 1;
let b = 1;
let c = 7;

function longestDiverseString(a: number, b: number, c: number): string {
    let result: string[] = [];

    const counts: [string, number][] = [
        ['a', a],
        ['b', b],
        ['c', c],
    ];

    while (true) {
        // Сортируем массив по количеству оставшихся символов (в порядке убывания)
        counts.sort((x, y) => y[1] - x[1]);

        // Проверяем, можем ли добавить символ
        let added = false;
        for (let i = 0; i < counts.length; i++) {
            const [char, count] = counts[i];

            // Проверяем, можем ли добавить символ
            if (
                count > 0 &&
                (result.length < 2 ||
                    !(
                        result[result.length - 1] === char &&
                        result[result.length - 2] === char
                    ))
            ) {
                result.push(char);
                counts[i][1]--; // Уменьшаем количество оставшихся символов
                added = true;
                break; // Выходим из цикла, так как мы добавили символ
            }
        }

        // Если не удалось добавить символ, выходим из цикла
        if (!added) break;
    }

    return result.join('');
}

console.log(longestDiverseString(a, b, c));
